import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useSelector } from 'react-redux';
import { Link } from 'react-router-dom';
import './ForumPage.css';

const ForumPage = () => {
  const [topics, setTopics] = useState([]);
  const [services, setServices] = useState([]);
  const [newTopicTitle, setNewTopicTitle] = useState('');
  const [isCreating, setIsCreating] = useState(false);
  const [activeTab, setActiveTab] = useState('services');
  const [error, setError] = useState('');
  const user = useSelector(state => state.user.userInfo);
  const isProfileComplete = user && user.name;

  useEffect(() => {
    const fetchTopics = async () => {
      try {
        const response = await axios.get('https://api.teploivanov.ru/api/forum/topics');
        setTopics(response.data);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–º:', error);
      }
    };

    const fetchServices = async () => {
      try {
        const response = await axios.get('https://api.teploivanov.ru/api/services');
        setServices(response.data);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —É—Å–ª—É–≥:', error);
      }
    };

    fetchTopics();
    fetchServices();
  }, []);

  const handleCreateTopic = async () => {
    if (!isProfileComplete) {
      setError('–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–º—ã —É–∫–∞–∂–∏—Ç–µ –∏–º—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ');
      return;
    }

    if (!newTopicTitle.trim()) {
      setError('–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–º—ã –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º');
      return;
    }

    setIsCreating(true);
    setError('');

    try {
      const response = await axios.post('https://api.teploivanov.ru/api/forum/topic', {
        title: newTopicTitle,
        userId: user._id,
      });
      setTopics(prev => [...prev, { ...response.data, comments: [] }]);
      setNewTopicTitle('');
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–º—ã:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–º—ã');
    } finally {
      setIsCreating(false);
    }
  };

  const serviceNames = services.map(service => service.name.toLowerCase());
  const serviceTopics = topics.filter(topic => serviceNames.includes(topic.title.toLowerCase()));
  const generalTopics = topics.filter(topic => !serviceNames.includes(topic.title.toLowerCase()));

  return (
    <div className="forum-container">
      <header className="forum-header">
        <h1 className="forum-title">–§–æ—Ä—É–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞</h1>
        <p className="forum-description">–û–±—Å—É–∂–¥–∞–π—Ç–µ —É—Å–ª—É–≥–∏, –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º</p>
      </header>

      <nav className="forum-tabs">
        <button 
          className={`tab-button ${activeTab === 'services' ? 'active' : ''}`}
          onClick={() => setActiveTab('services')}
        >
          –û–±—Å—É–∂–¥–µ–Ω–∏–µ —É—Å–ª—É–≥
        </button>
        <button 
          className={`tab-button ${activeTab === 'general' ? 'active' : ''}`}
          onClick={() => setActiveTab('general')}
        >
          –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
        </button>
      </nav>

      <div className="create-topic-form">
        <h2 className="form-title">–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É</h2>
        {error && <div className="form-error">{error}</div>}
        <div className="input-group">
          <input
            type="text"
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–µ–º—ã"
            value={newTopicTitle}
            onChange={(event) => setNewTopicTitle(event.target.value)}
            className="topic-input"
          />
          {isProfileComplete ? (
            <button
              onClick={handleCreateTopic}
              disabled={!newTopicTitle.trim() || isCreating}
              className="create-button"
            >
              {isCreating ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å —Ç–µ–º—É'}
            </button>
          ) : (
            <div className="auth-required">
              {user ? (
                <p>–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–º—ã <Link to="/login">–∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å</Link></p>
              ) : (
                <p>–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–º—ã <Link to="/login">–∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å</Link></p>
              )}
            </div>
          )}
        </div>
      </div>

      <div className="forum-content">
        {activeTab === 'services' ? (
          <div className="topics-section">
            <h2 className="section-title">
              –û–±—Å—É–∂–¥–µ–Ω–∏–µ —É—Å–ª—É–≥ <span className="topics-count">{serviceTopics.length}</span>
            </h2>
            
            {serviceTopics.length === 0 ? (
              <div className="empty-state">
                <p>–ü–æ–∫–∞ –Ω–µ—Ç –æ–±—Å—É–∂–¥–µ–Ω–∏–π —É—Å–ª—É–≥. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!</p>
                <Link to="/services" className="browse-link">
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—Å–ª—É–≥–∏ ‚Üí
                </Link>
              </div>
            ) : (
              <div className="topics-grid">
                {serviceTopics.map(topic => (
                  <Link to={`/forum/topic/${topic._id}`} key={topic._id} className="topic-card">
                    <div className="topic-main">
                      <h3 className="topic-title">{topic.title}</h3>
                      <p className="topic-excerpt">
                        {topic.comments?.[0]?.text?.slice(0, 100) || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...'}
                      </p>
                    </div>
                    <div className="topic-meta">
                      <div className="author-info">
                        <div className="author-avatar">
                          {topic.author?.name?.charAt(0) || '–ê'}
                        </div>
                        <span>{topic.author?.name || '–ê–Ω–æ–Ω–∏–º'}</span>
                      </div>
                      <div className="stats">
                        <span className="comments-count">
                          üí¨ {topic.comments?.length || 0}
                        </span>
                        <span className="topic-date">
                          {new Date(topic.date).toLocaleDateString()}
                        </span>
                      </div>
                    </div>
                  </Link>
                ))}
              </div>
            )}
          </div>
        ) : (
          <div className="topics-section">
            <h2 className="section-title">
              –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã <span className="topics-count">{generalTopics.length}</span>
            </h2>
            
            {generalTopics.length === 0 ? (
              <div className="empty-state">
                <p>–ü–æ–∫–∞ –Ω–µ—Ç –æ–±—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. –°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—É—é —Ç–µ–º—É!</p>
              </div>
            ) : (
              <div className="topics-grid">
                {generalTopics.map(topic => (
                  <Link to={`/forum/topic/${topic._id}`} key={topic._id} className="topic-card">
                    <div className="topic-main">
                      <h3 className="topic-title">{topic.title}</h3>
                      <p className="topic-excerpt">
                        {topic.comments?.[0]?.text?.slice(0, 100) || '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤...'}
                      </p>
                    </div>
                    <div className="topic-meta">
                      <div className="author-info">
                        <div className="author-avatar">
                          {topic.author?.name?.charAt(0) || '–ê'}
                        </div>
                        <span>{topic.author?.name || '–ê–Ω–æ–Ω–∏–º'}</span>
                      </div>
                      <div className="stats">
                        <span className="comments-count">
                          üí¨ {topic.comments?.length || 0}
                        </span>
                        <span className="topic-date">
                          {new Date(topic.date).toLocaleDateString()}
                        </span>
                      </div>
                    </div>
                  </Link>
                ))}
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default ForumPage;